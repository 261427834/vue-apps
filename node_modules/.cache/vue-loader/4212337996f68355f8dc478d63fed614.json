{"remainingRequest":"C:\\Users\\2541\\Desktop\\zuoye\\code\\源码\\apps\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\2541\\Desktop\\zuoye\\code\\源码\\apps\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\2541\\Desktop\\zuoye\\code\\源码\\apps\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\2541\\Desktop\\zuoye\\code\\源码\\apps\\src\\components\\main.vue?vue&type=template&id=5c886d6e&","dependencies":[{"path":"C:\\Users\\2541\\Desktop\\zuoye\\code\\源码\\apps\\src\\components\\main.vue","mtime":1586485544877},{"path":"C:\\Users\\2541\\Desktop\\zuoye\\code\\源码\\apps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\2541\\Desktop\\zuoye\\code\\源码\\apps\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\2541\\Desktop\\zuoye\\code\\源码\\apps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\2541\\Desktop\\zuoye\\code\\源码\\apps\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}